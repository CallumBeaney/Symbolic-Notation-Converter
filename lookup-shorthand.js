const shorthandLookupTable = [
    // Generic Operators
    {Shorthand: '=', UserInput: 'equals'},
    {Shorthand: '=', UserInput: 'equal'},
    {Shorthand: '+', UserInput: 'plus'},
    {Shorthand: '+', UserInput: 'add'},
    {Shorthand: '-', UserInput: 'minus'},
    {Shorthand: '×', UserInput: 'times'},
    {Shorthand: '×', UserInput: '*'},
    {Shorthand: '/', UserInput: 'div'},
    {Shorthand: '≥', UserInput: '>='},
    {Shorthand: '≥', UserInput: 'goe'},
    {Shorthand: '≤', UserInput: 'loe'},
    {Shorthand: '≤', UserInput: '<='},
    {Shorthand: '%', UserInput: 'mod'},
    {Shorthand: 'MOD', UserInput: 'modd'},

    // Symbolic Notation
    {Shorthand: '∈', UserInput: 'in'},
    {Shorthand: '∧', UserInput: 'and'},
    {Shorthand: '∨', UserInput: 'or'},
    {Shorthand: '∃', UserInput: 'exists'},
    {Shorthand: '∃', UserInput: 'exist'},
    {Shorthand: '¬', UserInput: 'not'},
    {Shorthand: '¬', UserInput: '~'},
    {Shorthand: '∀', UserInput: 'all'},
    {Shorthand: '∀', UserInput: 'every'},
    {Shorthand: '⇒', UserInput: 'then'},
    {Shorthand: '⇒', UserInput: 'implies'},
    {Shorthand: '≡', UserInput: 'iff'},
    {Shorthand: '≡', UserInput: 'ioi'},
    {Shorthand: '⟺', UserInput: 'ifff'},
    {Shorthand: '⟺', UserInput: 'ioif'},
    {Shorthand: '∉', UserInput: '!in'},
    {Shorthand: '∉', UserInput: 'nin'},
    {Shorthand: '∉', UserInput: 'notin'},
    {Shorthand: '∄', UserInput: '!exist'},
    {Shorthand: '∄', UserInput: 'notexist'},
    {Shorthand: '∄', UserInput: 'nexist'},
    {Shorthand: '∄', UserInput: 'nex'},
    {Shorthand: '≠', UserInput: '=/='},
    {Shorthand: '≠', UserInput: 'dne'},
    {Shorthand: '≠', UserInput: 'notequals'},
    {Shorthand: '≠', UserInput: '!='},
    {Shorthand: '∴', UserInput: 'therefore'},
    {Shorthand: '∴', UserInput: 'andso'},
    {Shorthand: '∵', UserInput: 'because'},
    {Shorthand: '∵', UserInput: 'bc'},
    {Shorthand: '∵', UserInput: 'since'},


    // Set Notation
    // https://www.mathsisfun.com/sets/symbols.html
    {Shorthand: '|', UserInput: 'suchthat'},
    {Shorthand: '|', UserInput: 'st'},
    {Shorthand: '∪', UserInput: 'union'},
    {Shorthand: '⊆', UserInput: 'subsetof'},
    {Shorthand: '⊆', UserInput: 'subset'},
    {Shorthand: '∩', UserInput: 'intersection'},
    {Shorthand: '∩', UserInput: 'intsec'},
    {Shorthand: '⊂', UserInput: 'propersubset'},
    {Shorthand: '⊂', UserInput: 'propsub'},
    {Shorthand: '⊇', UserInput: 'superset'},
    {Shorthand: '⊇', UserInput: 'supset'},
    {Shorthand: '⊃', UserInput: 'propersuperset'},
    {Shorthand: '⊃', UserInput: 'propsupset'},
    {Shorthand: '⊄', UserInput: 'notsub'},
    {Shorthand: '⊄', UserInput: '!subset'},
    {Shorthand: '⊅', UserInput: 'notsup'},
    {Shorthand: '⊅', UserInput: '!superset'},

    
    // Double-struck
    // https://en.wikipedia.org/wiki/Blackboard_bold
    {Shorthand: 'Ø', UserInput: 'emptyset'},
    {Shorthand: 'Ø', UserInput: '0set'},
    {Shorthand: 'ℕ', UserInput: 'nn'},
    {Shorthand: 'ℕ', UserInput: 'natnum'},
    {Shorthand: 'ℕ', UserInput: 'natset'},
    {Shorthand: 'ℤ', UserInput: 'zz'},
    {Shorthand: 'ℤ', UserInput: 'intset'},
    {Shorthand: 'ℚ', UserInput: 'qq'},
    {Shorthand: 'ℚ', UserInput: 'ratset'},
    {Shorthand: 'ℝ', UserInput: 'rr'},
    {Shorthand: 'ℝ', UserInput: 'realset'},
    {Shorthand: 'ℂ', UserInput: 'cc'},
    {Shorthand: 'ℂ', UserInput: 'compset'},
    {Shorthand: '𝔻', UserInput: 'dd'},
    {Shorthand: '𝔻', UserInput: 'domain'},
    {Shorthand: 'ℙ', UserInput: 'pp'},

    // Logical operators
    {Shorthand: '⊼', UserInput: 'nand'},
    {Shorthand: '⊽', UserInput: 'nor'},
    {Shorthand: '⊻', UserInput: 'xor'},
    {Shorthand: '⊕', UserInput: 'xorr'},

    // Greek Characters
    {Shorthand: 'Ω', UserInput: 'ohm'},
    {Shorthand: '睾', UserInput: 'ligma'},
    
    
    {Shorthand: 'α', UserInput: 'alpha'},
    {Shorthand: 'β', UserInput: 'beta'},
    {Shorthand: 'γ', UserInput: 'gamma'},
    {Shorthand: 'δ', UserInput: 'delta'},
    {Shorthand: 'ε', UserInput: 'epsilon'},
    {Shorthand: 'ϝ', UserInput: 'digamma'},
    {Shorthand: 'ζ', UserInput: 'zeta'},
    {Shorthand: 'η', UserInput: 'eta'},
    {Shorthand: 'θ', UserInput: 'theta'},
    {Shorthand: 'ι', UserInput: 'iota'},
    {Shorthand: 'κ', UserInput: 'kappa'},
    {Shorthand: 'λ', UserInput: 'lambda'},
    {Shorthand: 'μ', UserInput: 'mu'},
    {Shorthand: 'ξ', UserInput: 'xi'},
    {Shorthand: 'π', UserInput: 'pi'},
    {Shorthand: 'ρ', UserInput: 'rho'},
    {Shorthand: 'σ', UserInput: 'sigma'},
    {Shorthand: 'τ', UserInput: 'tau'},
    {Shorthand: 'υ', UserInput: 'upsilon'},
    {Shorthand: 'φ', UserInput: 'phi'},
    {Shorthand: 'χ', UserInput: 'chi'},
    {Shorthand: 'ψ', UserInput: 'psi'},
    {Shorthand: 'ω', UserInput: 'omega'},
    
    {Shorthand: 'Γ', UserInput: 'gammaa'},
    {Shorthand: 'Δ', UserInput: 'deltaa'},
    {Shorthand: 'Θ', UserInput: 'thetaa'},
    {Shorthand: 'Λ', UserInput: 'lambdaa'},
    {Shorthand: 'Ξ', UserInput: 'xii'},
    {Shorthand: 'Π', UserInput: 'pii'},
    {Shorthand: 'Γ', UserInput: 'gammaa'},
    {Shorthand: '∑', UserInput: 'sigmaa'},
    {Shorthand: 'ϒ', UserInput: 'upsilonn'},
    {Shorthand: 'Φ', UserInput: 'phii'},
    {Shorthand: 'Ψ', UserInput: 'psii'},
    {Shorthand: 'Ω', UserInput: 'omegaa'},

    // Misc
    {Shorthand: '√', UserInput: 'sqr'},
    {Shorthand: '±', UserInput: 'stddev'},
    {Shorthand: '∞', UserInput: 'inf'},
]